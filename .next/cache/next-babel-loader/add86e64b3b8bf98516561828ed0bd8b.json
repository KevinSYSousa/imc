{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Projects\\\\imc\\\\components\\\\Calculator\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Container, Grid, Typography, TextField, Button } from \"@material-ui/core\";\nimport styles from \"./Calculator.module.scss\";\n\nfunction Calculator() {\n  _s();\n\n  var _useState = useState(0),\n      height = _useState[0],\n      setHeight = _useState[1];\n\n  var _useState2 = useState(0),\n      weight = _useState2[0],\n      setWeight = _useState2[1];\n\n  var _useState3 = useState(),\n      imc = _useState3[0],\n      setImc = _useState3[1];\n\n  var calculateImc = function calculateImc() {\n    var heightMeters = height / 100;\n    setImc((weight / (heightMeters * heightMeters)).toFixed(2));\n  };\n\n  var verifyImc = function verifyImc() {\n    if (imc < 18.5) return \"Abaixo do peso\";\n    if (imc < 24.9) return \"Peso normal\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.calculator,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Calculadora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Height (cm)\",\n            variant: \"filled\",\n            fullWidth: true,\n            type: \"number\",\n            value: height,\n            onChange: function onChange(_ref) {\n              var target = _ref.target;\n              return setHeight(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Weight (Kg)\",\n            variant: \"filled\",\n            fullWidth: true,\n            type: \"number\",\n            value: weight,\n            onChange: function onChange(_ref2) {\n              var target = _ref2.target;\n              return setWeight(target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            fullWidth: true,\n            onClick: function onClick() {\n              return calculateImc();\n            },\n            children: \"Calculate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"O seu IMC \\xE9: \", imc, \" kg/m2 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calculator, \"I8vwihnSxjh/Caj0pVqb/N8K3Ec=\");\n\n_c = Calculator;\nexport default Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["E:/Projects/imc/components/Calculator/index.js"],"names":["useState","Container","Grid","Typography","TextField","Button","styles","Calculator","height","setHeight","weight","setWeight","imc","setImc","calculateImc","heightMeters","toFixed","verifyImc","calculator","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport styles from \"./Calculator.module.scss\";\r\n\r\nfunction Calculator() {\r\n  const [height, setHeight] = useState(0);\r\n  const [weight, setWeight] = useState(0);\r\n  const [imc, setImc] = useState();\r\n\r\n  const calculateImc = () => {\r\n    const heightMeters = height / 100;\r\n    setImc((weight / (heightMeters * heightMeters)).toFixed(2));\r\n  };\r\n\r\n  const verifyImc = () => {\r\n      if (imc < 18.5) return \"Abaixo do peso\"\r\n      if (imc < 24.9) return \"Peso normal\"\r\n  }\r\n\r\n  return (\r\n    <div className={styles.calculator}>\r\n      <Container maxWidth=\"xs\">\r\n        <Typography variant=\"h3\">Calculadora</Typography>\r\n        <Grid container direction=\"column\" spacing={2}>\r\n          <Grid item>\r\n            <TextField\r\n              label=\"Height (cm)\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              type=\"number\"\r\n              value={height}\r\n              onChange={({ target }) => setHeight(target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              label=\"Weight (Kg)\"\r\n              variant=\"filled\"\r\n              fullWidth\r\n              type=\"number\"\r\n              value={weight}\r\n              onChange={({ target }) => setWeight(target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              onClick={() => calculateImc()}\r\n            >\r\n              Calculate\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography>O seu IMC Ã©: {imc} kg/m2 </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculator;\r\n"]},"metadata":{},"sourceType":"module"}